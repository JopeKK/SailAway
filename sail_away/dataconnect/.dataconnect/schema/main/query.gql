extend type Query {
  """
  ✨ Look up a single `Allergy` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  allergy(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Allergy_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Allergy_FirstRow
  ): Allergy @fdc_generated(from: "Allergy", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Product` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  product(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Product_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Product_FirstRow
  ): Product @fdc_generated(from: "Product", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Tip` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  tip(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Tip_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Tip_FirstRow
  ): Tip @fdc_generated(from: "Tip", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Transport` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  transport(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Transport_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Transport_FirstRow
  ): Transport @fdc_generated(from: "Transport", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Trip` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  trip(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Trip_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Trip_FirstRow
  ): Trip @fdc_generated(from: "Trip", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `User` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  user(
    """
    The key used to identify the object.
    """
    key: User_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: User_FirstRow
  ): User @fdc_generated(from: "User", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `UserPrefernces` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  userPreference(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: UserPrefernces_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: UserPrefernces_FirstRow
  ): UserPrefernces @fdc_generated(from: "UserPrefernces", purpose: QUERY_SINGLE)
  """
  ✨ List `Allergy` objects in the table, optionally filtered by `where` conditions.
  """
  allergies(
    """
    Filter condition to narrow down the query results.
    """
    where: Allergy_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Allergy_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Allergy!]! @fdc_generated(from: "Allergy", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Product` objects in the table, optionally filtered by `where` conditions.
  """
  products(
    """
    Filter condition to narrow down the query results.
    """
    where: Product_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Product_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Product!]! @fdc_generated(from: "Product", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Tip` objects in the table, optionally filtered by `where` conditions.
  """
  tips(
    """
    Filter condition to narrow down the query results.
    """
    where: Tip_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Tip_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Tip!]! @fdc_generated(from: "Tip", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Transport` objects in the table, optionally filtered by `where` conditions.
  """
  transports(
    """
    Filter condition to narrow down the query results.
    """
    where: Transport_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Transport_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Transport!]! @fdc_generated(from: "Transport", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Trip` objects in the table, optionally filtered by `where` conditions.
  """
  trips(
    """
    Filter condition to narrow down the query results.
    """
    where: Trip_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Trip_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Trip!]! @fdc_generated(from: "Trip", purpose: QUERY_MULTIPLE)
  """
  ✨ List `User` objects in the table, optionally filtered by `where` conditions.
  """
  users(
    """
    Filter condition to narrow down the query results.
    """
    where: User_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [User_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [User!]! @fdc_generated(from: "User", purpose: QUERY_MULTIPLE)
  """
  ✨ List `UserPrefernces` objects in the table, optionally filtered by `where` conditions.
  """
  userPreferences(
    """
    Filter condition to narrow down the query results.
    """
    where: UserPrefernces_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [UserPrefernces_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [UserPrefernces!]! @fdc_generated(from: "UserPrefernces", purpose: QUERY_MULTIPLE)
}
