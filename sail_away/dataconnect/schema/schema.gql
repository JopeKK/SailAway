type User
@table(name: "Users", singular: "user",plural: "users",key:["id","authId"]) {
    id: UUID! @col(name: "user_id") @default(expr: "uuidV4()")
    authId: String! @col(name: "auth_id") @default(value: "test_id")
    name: String! @col(name: "user_name") @default(value: "test")
    email: String! @col(name: "user_email") @default(value: "test@test.test")
}

type Product 
@table(name: "Products", singular: "product", plural: "products", key: ["id"]) {
  id: UUID! @col(name: "product_id")
  name: String! @col(name: "product_name") @default(value: "test product")
  storageType: String! @col(name: "storage_type") @default(value: "test storage type")
}

type Allergy 
@table(name: "Allergies", singular: "allergy", plural: "allergies", key: ["id"]) {
  id: UUID! @col(name: "allergy_id")
  name: String! @col(name: "allergy_name")
}

type UserPrefernces
@table(name: "UsersPreferences", singular: "userPreference", plural: "userPreferences",key: ["id"]){
  id: UUID! @default(expr: "uuidV4()")
  userId: String
  hatedProduct: [UUID]
  allergies: [UUID]
}

type Trip
@table(name: "Trip", singular: "trip", plural: "trips",key: ["id"]){
    id: UUID! @default(expr: "uuidV4()")
    name: String!
    authorId: String!
    tips: Boolean!
    transport: Boolean!
    startingData: Date!
    inviteCode: String!
    members: [String]
}

type Tip
@table(name: "Tip", singular: "tip", plural: "tips",key: ["id"]){
    id: UUID! @default(expr: "uuidV4()")
    title: String!
    description: String!
}

type Transport
@table(name: "Transport", singular: "transport", plural: "transports",key: ["id"]){
    id: UUID! @default(expr: "uuidV4()")
    tripId: UUID!
    type: String!
    members: [String]!
}
