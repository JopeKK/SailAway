query GetAllUsers {
    users{
        id,
        authId,
        name,
        email,
    }
}

query GetAllTrips 
@auth(level: USER)
{ 
    trips{
        id,
        name,
        authorId,
        tips,
        transport,
        startingData,
        inviteCode,
        members,
    }
}

query GetAllTips
@auth(level: USER)
{
  tips{
    id,
    title,
    description,
  }
}

query GetAllTransports
@auth(level: USER)
{
    transports{
        id,
        tripId,
        members,
        type,
    }
}

query GetUsersFromTripWithTripId($id: UUID!)
@auth(level: USER)
{
    UsersFromTrip: trips(where:{id: {eq:$id}}){
        members
    }
}

query GetUsersFromMembersList($members: [String!]!)
@auth(level: USER)
{
    UsersFromMembers: users(where: {authId: {in: $members}}){
        authId,
        name,
    }
}

query GetTransportByTripId($tripId: UUID!)
@auth(level: USER)
{
    TransportByTripId: transports(where: {tripId: {eq: $tripId}}){
        id,
        tripId,
        members,
        type,
    }
}
query getTransportById($transportId: UUID!)
@auth(level: USER)
{
    TransportByTripId: transports(where: {id: {eq: $transportId}}){
        id,
        tripId,
        members,
        type,
    }
}



query GetTripById($id: UUID!)
 @auth(level: USER)
{
    TripFromId: trips(
        where: {id:{eq:$id}}
    ){
        id,
        name,
        authorId,
        tips,
        transport,
        startingData,
        inviteCode,
        members,
    }

}

query GetTripWithInviteCode($code: String!)
 @auth(level: USER)
 {
    TripFromCode: trips(
        where: {inviteCode: {eq: $code}}
    ){
        id,
        name,
        authorId,
        tips,
        transport,
        startingData,
        inviteCode,
        members,
    }
}

query GetUserFromAuthId($userAuthId: String!) 
@auth(level: PUBLIC)
{
    UserFromAuthId: users(
        where: {authId: {eq: $userAuthId}}
    ){
        id,
        authId,
        name,
        email
    }
}



query GetAllProducts 
@auth(level: PUBLIC)
{
    products{
        id,
        name,
        storageType,
    }
}

query GetAllAllergies 
@auth(level: PUBLIC)
{
    allergies{
        id,
        name,
    }
}

query GetAllUsersPreferences 
@auth(level: PUBLIC)
{
    userPreferences{
        id,
        userId,
        hatedProduct,
        allergies
    }
}

query GetUserPreferences($userAuthId: String!) 
@auth(level: USER)
{
    PreferenceFromAuthId: userPreferences(where: {userId:{eq: $userAuthId}}){
        id,
        userId,
        hatedProduct,
        allergies
    }
}

query GetAllAllergiesFromIds($IdList: [UUID!]!)
@auth(level:USER)
{
    AllergiesList: allergies(where:{id:{in: $IdList}}){
        id,
        name,
    }
}

query GetAllProductsFromIds($IdList: [UUID!]!)
@auth(level: USER)
{
    ProductList: products(where:{id:{in: $IdList}}){
        id,
        name,
        storageType,
    }
}